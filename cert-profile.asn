IEEE1609dot2-profiles {iso(1) identified-organization(3) ieee(111) 
standards-association-numbered-series-standards(2) wave-stds(1609)  
dot2(2) base (1) profiles (3)}

DEFINITIONS AUTOMATIC TAGS ::= BEGIN

EXPORTS ALL;

IMPORTS 
  IdentifiedRegion,
  PsidSspRange,
  SequenceOfIdentifiedRegion
FROM IEEE1609dot2 {iso(1) identified-organization(3) ieee(111) 
    standards-association-numbered-series-standards(2) wave-stds(1609)  
    dot2(2) base(1) base-types(2)}
 
  Countersignature,
  Certificate,
  ImplicitCertificate,
  ExplicitCertificate, 
  PsidGroupPermissions,
  SequenceOfPsidGroupPermissions,
  PsidSsp,
  SequenceOfPsidSsp,
  SequenceOfPsidSspRange
FROM IEEE1609dot2 {iso(1) identified-organization(3) ieee(111) 
    standards-association-numbered-series-standards(2) wave-stds(1609)  
    dot2(2) base(1) schema(1)}

  CrlPsid
FROM IEEE1609dot2Crl {iso(1) identified-organization(3) ieee(111) 
  standards-association-numbered-series-standards(2) wave-stds(1609)  
  dot2(2) crl(3) protocol(2)}

  Canada,
  Mexico,
  USA,
  ObeEnrollmentCertExpirationPoc,
  ObeEnrollmentCertExpirationCvp,
  ObePseudonymCertExpiration,
  ObeIdentificationCertExpiration,
  RseEnrollmentCertExpirationPoc,
  RseEnrollmentCertExpirationCvp,
  RseApplicationCertExpiration,
  DcmCertExpiration,
  EcaCertExpirationPoc,
  EcaCertExpirationCvp,
  RaCertExpiration,
  LaCertExpiration,
  PcaCertExpiration,
  IcaCertExpirationPoc,
  IcaCertExpirationCvp,
  MaCertExpiration,
  CrlgCertExpiration,
  PgCertExpiration,
  RootCaCertExpiration,
  ElectorCertExpiration,
  BsmPsid,
  SecurityMgmtPsid,
  MisbehaviorReportingPsid
FROM Ieee1609dot2ScmsBaseTypes {iso(1) identified-organization(3) ieee(111)
standards-association-numbered-series-standards(2) wave-stds(1609)  dot2(2)
scms (2) interfaces(1) base-types (2)}

;


ObeEnrollmentCertificate ::= ImplicitCertificate (WITH COMPONENTS { ...,
  issuer (WITH COMPONENTS{sha256AndDigest}),
  toBeSigned (WITH COMPONENTS { ...,
    id (WITH COMPONENTS { 
      name("")
    }),
    -- cracaId set to HashedId3 of the Root CA cert
    crlSeries(3),
    validityPeriod (WITH COMPONENTS { ...,
      duration (ObeEnrollmentCertExpirationPoc | ObeEnrollmentCertExpirationCvp)
    }),
    region (WITH COMPONENTS {
      identifiedRegion (SequenceOfIdentifiedRegion (SIZE(3)) (CONSTRAINED BY {
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(Canada) 
        }), 
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(Mexico) 
        }), 
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(USA) 
        })
      }))
    }),
    assuranceLevel ABSENT,
    appPermissions ABSENT,
    certIssuePermissions ABSENT,
    certRequestPermissions (SequenceOfPsidGroupPermissions (SIZE(2)) (CONSTRAINED BY {
      PsidGroupPermissions ( WITH COMPONENTS {..., 
	    appPermissions (WITH COMPONENTS { 
          explicit (SequenceOfPsidSspRange (SIZE (1)) (WITH COMPONENT (WITH COMPONENTS { 
            psid (BsmPsid), sspRange ABSENT 
          })))
        }),
        minChainDepth(0),
        chainDepthRange(0)
      }),
      PsidGroupPermissions ( WITH COMPONENTS {..., 
	    appPermissions (WITH COMPONENTS{ 
          explicit (SequenceOfPsidSspRange (SIZE (1)) (WITH COMPONENT (WITH COMPONENTS {
            psid (MisbehaviorReportingPsid), sspRange ABSENT 
          })))
        }),
        minChainDepth(1),
        chainDepthRange(0)
      })
    })),
    canRequestRollover(NULL),
    encryptionKey ABSENT,
    verifyKeyIndicator (WITH COMPONENTS {
      reconstructionValue (WITH COMPONENTS {
        compressed-y-0,
        compressed-y-1
      })
    })
  })
})


ObePseudonymCertificate ::= ImplicitCertificate (WITH COMPONENTS { ...,
  issuer (WITH COMPONENTS {sha256AndDigest}),
  toBeSigned (WITH COMPONENTS { ...,
    id (WITH COMPONENTS { 
      linkageData (WITH COMPONENTS {
        group-linkage-value PRESENT
      })
    }),
    -- cracaId set to HashedId3 of the Root CA cert
    crlSeries(1), -- we will use this value in POC without prejudice
      -- as to whether it will be used in all BSM certs
    validityPeriod (WITH COMPONENTS { ...,
      duration (ObePseudonymCertExpiration)
    }),
    region (WITH COMPONENTS {
      identifiedRegion (SequenceOfIdentifiedRegion (SIZE(3)) (CONSTRAINED BY {
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(Canada) 
        }), 
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(Mexico) 
        }), 
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(USA) 
        })
      }))
    }),
    assuranceLevel ABSENT,
    appPermissions (SequenceOfPsidSsp (SIZE(2)) (CONSTRAINED BY {
      PsidSsp (WITH COMPONENTS {
        psid (BsmPsid), 
        ssp ABSENT
      }), 
      PsidSsp (WITH COMPONENTS {
        psid (MisbehaviorReportingPsid), 
        ssp ABSENT
      })
    })),
    certIssuePermissions ABSENT,
    certRequestPermissions ABSENT,
    canRequestRollover ABSENT,
    encryptionKey ABSENT,
    verifyKeyIndicator (WITH COMPONENTS {
      reconstructionValue (WITH COMPONENTS {
        compressed-y-0,
        compressed-y-1
      })
    })
  })
})


ObeIdentificationCertificate ::= ImplicitCertificate (WITH COMPONENTS { ...,
  issuer (WITH COMPONENTS {sha256AndDigest}),
  toBeSigned (WITH COMPONENTS { ...,
    id (WITH COMPONENTS { 
      name("") -- OBE's ID to be put here
    }),
   -- cracaId set to HashedId3 of the Root CA cert
    crlSeries(3),
    validityPeriod (WITH COMPONENTS { ...,
      duration (ObeIdentificationCertExpiration)
    }),
    region (WITH COMPONENTS {
      identifiedRegion (SequenceOfIdentifiedRegion (SIZE(3)) (CONSTRAINED BY {
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(Canada) 
        }), 
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(Mexico) 
        }), 
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(USA) 
        })
      }))
    }),
    assuranceLevel ABSENT,
    --appPermissions TO BE ADDED LATER,
    certIssuePermissions ABSENT,
    certRequestPermissions ABSENT,
    canRequestRollover ABSENT,
    encryptionKey ABSENT,
    verifyKeyIndicator (WITH COMPONENTS {
      reconstructionValue (WITH COMPONENTS {
        compressed-y-0,
        compressed-y-1
      })
    })
  })
})


RseEnrollmentCertificate ::= ImplicitCertificate (WITH COMPONENTS { ...,
  issuer (WITH COMPONENTS{sha256AndDigest}),
  toBeSigned (WITH COMPONENTS { ...,
    id (WITH COMPONENTS { 
      name("")
    }),
    -- cracaId set to HashedId3 of the Root CA cert
    crlSeries(2),
    validityPeriod (WITH COMPONENTS { ...,
      duration (RseEnrollmentCertExpirationPoc | RseEnrollmentCertExpirationCvp)
    }),
    region (WITH COMPONENTS {
      identifiedRegion (SequenceOfIdentifiedRegion (SIZE(3)) (CONSTRAINED BY {
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(Canada) 
        }), 
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(Mexico) 
        }), 
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(USA) 
        })
      }))
    }),
    assuranceLevel ABSENT,
    appPermissions ABSENT,
    certIssuePermissions ABSENT,
    --certRequestPermissions TO BE ADDED LATER,
    canRequestRollover(NULL),
    encryptionKey ABSENT,
    verifyKeyIndicator (WITH COMPONENTS {
      reconstructionValue (WITH COMPONENTS {
        compressed-y-0,
        compressed-y-1
      })
    })
  })
})


RseApplicationCertificate ::= ImplicitCertificate (WITH COMPONENTS { ...,
  issuer (WITH COMPONENTS {sha256AndDigest}),
  toBeSigned (WITH COMPONENTS { ...,
    id (WITH COMPONENTS { 
      name("") -- RSE's ID to be put here
    }),
    -- cracaId set to HashedId3 of the Root CA cert
    crlSeries(2),
    validityPeriod (WITH COMPONENTS { ...,
      duration (RseApplicationCertExpiration)
    }),
    region (WITH COMPONENTS {
      identifiedRegion (SequenceOfIdentifiedRegion (SIZE(3)) (CONSTRAINED BY {
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(Canada) 
        }), 
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(Mexico) 
        }), 
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(USA) 
        })
      }))
    }),
    assuranceLevel ABSENT,
    --appPermissions TO BE ADDED LATER,
    certIssuePermissions ABSENT,
    certRequestPermissions ABSENT,
    canRequestRollover ABSENT,
    encryptionKey ABSENT,
    verifyKeyIndicator (WITH COMPONENTS {
      reconstructionValue (WITH COMPONENTS {
        compressed-y-0,
        compressed-y-1
      })
    })
  })
})


DcmCertificate ::= ExplicitCertificate (WITH COMPONENTS { ...,
  issuer (WITH COMPONENTS{sha256AndDigest}),
  toBeSigned (WITH COMPONENTS { ...,
    id (WITH COMPONENTS {
      name ("dcm.v2xscms.com" | "v2v-dcm.cvp.v2xscms.com" | "v2i-dcm.cvp.v2xscms.com") -- !!TBD!!
    }),
    -- cracaId set to HashedId3 of the ICA cert
    crlSeries(2),
    validityPeriod (WITH COMPONENTS { ...,
      duration (DcmCertExpiration)
    }),
    region (WITH COMPONENTS {
      identifiedRegion (SequenceOfIdentifiedRegion (SIZE(3)) (CONSTRAINED BY {
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(Canada) 
        }), 
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(Mexico) 
        }), 
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(USA) 
        })
      }))
    }),
    assuranceLevel ABSENT,
    appPermissions (SequenceOfPsidSsp (SIZE(1)) (CONSTRAINED BY {
      PsidSsp (WITH COMPONENTS {
        psid (SecurityMgmtPsid)
        --ssp(OER encoding of ScmsSsp indicating Dcmssp)
      })
    })),
    certIssuePermissions ABSENT,
    certRequestPermissions ABSENT,
    canRequestRollover(NULL),
    encryptionKey PRESENT,
    verifyKeyIndicator (WITH COMPONENTS {
      verificationKey (WITH COMPONENTS {
        ecdsaNistP256 (WITH COMPONENTS {
          compressed-y-0,
          compressed-y-1
        })
      })
    })
  })
})


EcaCertificate ::= ExplicitCertificate (WITH COMPONENTS { ...,
  issuer (WITH COMPONENTS {sha256AndDigest}),
  toBeSigned (WITH COMPONENTS { ...,
    id (WITH COMPONENTS {
      name ("eca.v2xscms.com" | "v2v-eca.cvp.v2xscms.com" | "v2i-eca.cvp.v2xscms.com") -- !!TBD!!
    }),
    -- cracaId set to HashedId3 of the ICA cert
    crlSeries(2),
    validityPeriod (WITH COMPONENTS { ...,
      duration (EcaCertExpirationPoc | EcaCertExpirationCvp)
    }),
    region (WITH COMPONENTS {
      identifiedRegion (SequenceOfIdentifiedRegion (SIZE(3)) (CONSTRAINED BY {
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(Canada) 
        }), 
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(Mexico) 
        }), 
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(USA) 
        })
      }))
    }),
    assuranceLevel ABSENT,
    appPermissions (SequenceOfPsidSsp (SIZE(1)) (CONSTRAINED BY {
      PsidSsp (WITH COMPONENTS {
        psid (SecurityMgmtPsid)
        --ssp(OER encoding of ScmsSsp indicating Ecassp)
      })
    })),
    certIssuePermissions (SequenceOfPsidGroupPermissions (SIZE (1)) (WITH COMPONENT (WITH COMPONENTS {..., 
	  appPermissions (WITH COMPONENTS {..., 
		explicit (SequenceOfPsidSspRange (SIZE (2)) (CONSTRAINED BY{
		  PsidSspRange (WITH COMPONENTS {
			psid (BsmPsid), sspRange ABSENT 
		  }),
		  PsidSspRange (WITH COMPONENTS {
			psid (MisbehaviorReportingPsid), sspRange ABSENT 
		  })
		}))
	  }),
	  minChainDepth(1),
	  chainDepthRange(0),
	  eeType({enrol})
    }))),
    certRequestPermissions ABSENT,
    canRequestRollover (NULL),
    encryptionKey PRESENT,
    verifyKeyIndicator (WITH COMPONENTS {
      verificationKey (WITH COMPONENTS {
        ecdsaNistP256 (WITH COMPONENTS {
          compressed-y-0,
          compressed-y-1
        })
      })
    })
  })
})


RaCertificate ::= ExplicitCertificate (WITH COMPONENTS { ...,
  issuer (WITH COMPONENTS{sha256AndDigest}),
  toBeSigned (WITH COMPONENTS { ...,
    id (WITH COMPONENTS {
      name ("ra.v2xscms.com" | "v2v-ra.cvp.v2xscms.com" | "v2i-ra.cvp.v2xscms.com") -- !!TBD!!
    }),
    -- cracaId set to HashedId3 of the ICA cert
    crlSeries(2),
    validityPeriod (WITH COMPONENTS { ...,
      duration (RaCertExpiration)
    }),
    region (WITH COMPONENTS {
      identifiedRegion (SequenceOfIdentifiedRegion (SIZE(3)) (CONSTRAINED BY {
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(Canada) 
        }), 
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(Mexico) 
        }), 
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(USA) 
        })
      }))
    }),
    assuranceLevel ABSENT,
    appPermissions (SequenceOfPsidSsp (SIZE(1)) (CONSTRAINED BY {
      PsidSsp (WITH COMPONENTS {
        psid (SecurityMgmtPsid)
        --ssp(OER encoding of ScmsSsp indicating Rassp)
      })
    })),
    certIssuePermissions ABSENT,
    certRequestPermissions (SequenceOfPsidGroupPermissions (SIZE (1)) (WITH COMPONENT (WITH COMPONENTS {..., 
	  appPermissions (WITH COMPONENTS {..., 
		explicit (SequenceOfPsidSspRange (SIZE (2)) (CONSTRAINED BY{
		  PsidSspRange (WITH COMPONENTS {
			psid (BsmPsid), sspRange ABSENT 
		  }),
		  PsidSspRange (WITH COMPONENTS {
			psid (MisbehaviorReportingPsid), sspRange ABSENT 
		  })
		}))
	  })
	}))),
    canRequestRollover(NULL),
    encryptionKey PRESENT,
    verifyKeyIndicator (WITH COMPONENTS {
      verificationKey (WITH COMPONENTS {
        ecdsaNistP256 (WITH COMPONENTS {
          compressed-y-0,
          compressed-y-1
        })
      })
    })
  })
})


LaCertificate ::= ExplicitCertificate (WITH COMPONENTS { ...,
  issuer (WITH COMPONENTS{sha256AndDigest}),
  toBeSigned (WITH COMPONENTS { ...,
    id (WITH COMPONENTS {
      name ("la.v2xscms.com" | "v2v-la.cvp.v2xscms.com" | "v2i-la.cvp.v2xscms.com") -- !!TBD!!
    }),
    -- cracaId set to HashedId3 of the ICA cert
    crlSeries(2),
    validityPeriod (WITH COMPONENTS { ...,
      duration (LaCertExpiration)
    }),
    region (WITH COMPONENTS {
      identifiedRegion (SequenceOfIdentifiedRegion (SIZE(3)) (CONSTRAINED BY {
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(Canada) 
        }), 
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(Mexico) 
        }), 
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(USA) 
        })
      }))
    }),
    assuranceLevel ABSENT,
    appPermissions (SequenceOfPsidSsp (SIZE(1)) (CONSTRAINED BY {
      PsidSsp (WITH COMPONENTS {
        psid (SecurityMgmtPsid)
        --ssp(OER encoding of ScmsSsp indicating Lassp)
      })
    })),
    certIssuePermissions ABSENT,
    certRequestPermissions ABSENT,
    canRequestRollover (NULL),
    encryptionKey PRESENT,
    verifyKeyIndicator (WITH COMPONENTS {
      verificationKey (WITH COMPONENTS {
        ecdsaNistP256 (WITH COMPONENTS {
          compressed-y-0,
          compressed-y-1
        })
      })
    })
  })
})


PcaCertificate ::= ExplicitCertificate (WITH COMPONENTS { ...,
  issuer (WITH COMPONENTS {sha256AndDigest}),
  toBeSigned (WITH COMPONENTS { ...,
    id (WITH COMPONENTS {
      name ("pca.v2xscms.com" | "v2v-pca.cvp.v2xscms.com" | "v2i-pca.cvp.v2xscms.com") -- !!TBD!!
    }),
    -- cracaId set to HashedId3 of the ICA cert
    crlSeries(2),
    validityPeriod (WITH COMPONENTS { ...,
      duration (PcaCertExpiration)
    }),
    region (WITH COMPONENTS {
      identifiedRegion (SequenceOfIdentifiedRegion (SIZE(3)) (CONSTRAINED BY {
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(Canada) 
        }), 
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(Mexico) 
        }), 
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(USA) 
        })
      }))
    }),
    assuranceLevel ABSENT,
    appPermissions (SequenceOfPsidSsp (SIZE(1)) (CONSTRAINED BY {
      PsidSsp (WITH COMPONENTS {
        psid (SecurityMgmtPsid)
        --ssp(OER encoding of ScmsSsp indicating Pcassp)
      })
    })),
    certIssuePermissions (SequenceOfPsidGroupPermissions (SIZE (1)) (WITH COMPONENT (WITH COMPONENTS {..., 
	  appPermissions (WITH COMPONENTS {..., 
		explicit (SequenceOfPsidSspRange (SIZE (2)) (CONSTRAINED BY{
		  PsidSspRange (WITH COMPONENTS {
			psid (BsmPsid), sspRange ABSENT 
		  }),
		  PsidSspRange (WITH COMPONENTS {
			psid (MisbehaviorReportingPsid), sspRange ABSENT 
		  })
		}))
	  }),
	  minChainDepth(1),
	  chainDepthRange(0)
    }))),
    certRequestPermissions ABSENT,
    canRequestRollover (NULL),
    encryptionKey PRESENT,
    verifyKeyIndicator (WITH COMPONENTS {
      verificationKey (WITH COMPONENTS {
        ecdsaNistP256 (WITH COMPONENTS {
          compressed-y-0,
          compressed-y-1
        })
      })
    })
  })
})


IcaCertificate ::= ExplicitCertificate (WITH COMPONENTS { ...,
  issuer (WITH COMPONENTS {sha256AndDigest}),
  toBeSigned (WITH COMPONENTS { ...,
    id (WITH COMPONENTS {
      name ("ica.v2xscms.com" | "v2v-ica.cvp.v2xscms.com" | "v2i-ica.cvp.v2xscms.com") -- !!TBD!!
    }),
    -- cracaId set to HashedId3 of the Root CA cert
    crlSeries(2),
    validityPeriod (WITH COMPONENTS { ...,
      duration (IcaCertExpirationPoc | IcaCertExpirationCvp)
    }),
    region (WITH COMPONENTS {
      identifiedRegion (SequenceOfIdentifiedRegion (SIZE(3)) (CONSTRAINED BY {
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(Canada) 
        }), 
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(Mexico) 
        }), 
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(USA) 
        })
      }))
    }),
    assuranceLevel ABSENT,
    appPermissions (SequenceOfPsidSsp (SIZE(1)) (CONSTRAINED BY {
      PsidSsp (WITH COMPONENTS {
        psid (SecurityMgmtPsid)
        --ssp(OER encoding of ScmsSsp indicating Icassp)
      })
    })),
    certIssuePermissions (SequenceOfPsidGroupPermissions (SIZE(4)) (CONSTRAINED BY {
      PsidGroupPermissions ( WITH COMPONENTS {..., 
	    appPermissions (WITH COMPONENTS { 
          explicit (SequenceOfPsidSspRange (SIZE (1)) (WITH COMPONENT (WITH COMPONENTS { 
            psid (BsmPsid), sspRange ABSENT 
          })))
        }),
        minChainDepth(2),
        chainDepthRange(0),
	    eeType ({app, enrol})
      }),
      PsidGroupPermissions ( WITH COMPONENTS {..., 
	    appPermissions (WITH COMPONENTS{ 
          explicit (SequenceOfPsidSspRange (SIZE (1)) (WITH COMPONENT (WITH COMPONENTS {
            psid (SecurityMgmtPsid), sspRange (WITH COMPONENTS {all}) 
          })))
        }),
        minChainDepth(1),
        chainDepthRange(0),
        eeType ({app, enrol})
      }),
	  PsidGroupPermissions ( WITH COMPONENTS {..., 
	    appPermissions (WITH COMPONENTS{ 
          explicit (SequenceOfPsidSspRange (SIZE (1)) (WITH COMPONENT (WITH COMPONENTS {
            psid (CrlPsid), sspRange (WITH COMPONENTS {all})
          })))
        }),
        minChainDepth(1),
        chainDepthRange(0),
        eeType ({app, enrol})
      }),
	  PsidGroupPermissions ( WITH COMPONENTS {..., 
	    appPermissions (WITH COMPONENTS{ 
          explicit (SequenceOfPsidSspRange (SIZE (1)) (WITH COMPONENT (WITH COMPONENTS {
            psid (MisbehaviorReportingPsid), sspRange ABSENT 
          })))
        }),
        minChainDepth(2),
        chainDepthRange(0),
        eeType ({app, enrol})
      })
    })),
    certRequestPermissions ABSENT,
    canRequestRollover (NULL),
    encryptionKey PRESENT,
    verifyKeyIndicator (WITH COMPONENTS {
      verificationKey (WITH COMPONENTS {
        ecdsaNistP256 (WITH COMPONENTS {
          compressed-y-0,
          compressed-y-1
        })
      })
    })
  })
})


MaCertificate ::= ExplicitCertificate (WITH COMPONENTS { ...,
  issuer (WITH COMPONENTS {sha256AndDigest}),
  toBeSigned (WITH COMPONENTS { ...,
    id (WITH COMPONENTS {
      name ("ma.v2xscms.com" | "ma.cvp.v2xscms.com") -- !!TBD!!
    }),
    -- cracaId set to HashedId3 of the Root CA cert
    crlSeries(2),
    validityPeriod (WITH COMPONENTS { ...,
      duration (MaCertExpiration)
    }),
    region (WITH COMPONENTS {
      identifiedRegion (SequenceOfIdentifiedRegion (SIZE(3)) (CONSTRAINED BY {
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(Canada) 
        }), 
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(Mexico) 
        }), 
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(USA) 
        })
      }))
    }),
    assuranceLevel ABSENT,
    appPermissions (SequenceOfPsidSsp (SIZE(1)) (CONSTRAINED BY {
      PsidSsp (WITH COMPONENTS {
        psid (SecurityMgmtPsid)
        --ssp(OER encoding of ScmsSsp indicating MA)
      })
    })),
    certIssuePermissions ABSENT,
    certRequestPermissions ABSENT,
    canRequestRollover (NULL),
    encryptionKey PRESENT,
    verifyKeyIndicator (WITH COMPONENTS {
      verificationKey (WITH COMPONENTS {
        ecdsaNistP256 (WITH COMPONENTS {
          compressed-y-0,
          compressed-y-1
        })
      })
    })
  })
})


CrlgCertificate ::= ExplicitCertificate (WITH COMPONENTS { ...,
  issuer (WITH COMPONENTS {sha256AndDigest}),
  toBeSigned (WITH COMPONENTS { ...,
    id (WITH COMPONENTS {
      name ("crlg.v2xscms.com" | "crlg.cvp.v2xscms.com") -- !!TBD!!
    }),
    -- cracaId set to HashedId3 of the Root CA cert
    crlSeries(2),
    validityPeriod (WITH COMPONENTS { ...,
      duration (CrlgCertExpiration)
    }),
    region (WITH COMPONENTS {
      identifiedRegion (SequenceOfIdentifiedRegion (SIZE(3)) (CONSTRAINED BY {
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(Canada) 
        }), 
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(Mexico) 
        }), 
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(USA) 
        })
      }))
    }),
    assuranceLevel ABSENT,
    appPermissions (SequenceOfPsidSsp (SIZE(1)) (CONSTRAINED BY {
      PsidSsp (WITH COMPONENTS {
        psid (SecurityMgmtPsid)
        --ssp(OER encoding of ScmsSsp indicating CRL Generator)
      })
    })),
    certIssuePermissions ABSENT,
    certRequestPermissions ABSENT,
    canRequestRollover (NULL),
    encryptionKey PRESENT,
    verifyKeyIndicator (WITH COMPONENTS {
      verificationKey (WITH COMPONENTS {
        ecdsaNistP256 (WITH COMPONENTS {
          compressed-y-0,
          compressed-y-1
        })
      })
    })
  })
})


PgCertificate ::= ExplicitCertificate (WITH COMPONENTS { ...,
  issuer (WITH COMPONENTS {sha256AndDigest}),
  toBeSigned (WITH COMPONENTS { ...,
    id (WITH COMPONENTS {
      name ("pg.v2xscms.com" | "pg.cvp.v2xscms.com") -- !!TBD!!
    }),
    -- cracaId set to HashedId3 of the Root CA cert
    crlSeries(2),
    validityPeriod (WITH COMPONENTS { ...,
      duration (PgCertExpiration)
    }),
    region (WITH COMPONENTS {
      identifiedRegion (SequenceOfIdentifiedRegion (SIZE(3)) (CONSTRAINED BY {
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(Canada) 
        }), 
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(Mexico) 
        }), 
        IdentifiedRegion (WITH COMPONENTS { 
          countryOnly(USA) 
        })
      }))
    }),
    assuranceLevel ABSENT,
    appPermissions (SequenceOfPsidSsp (SIZE(1)) (CONSTRAINED BY {
      PsidSsp (WITH COMPONENTS {
        psid (SecurityMgmtPsid)
        --ssp(OER encoding of ScmsSsp indicating Policy Generator)
      })
    })),
    certIssuePermissions ABSENT,
    certRequestPermissions ABSENT,
    canRequestRollover (NULL),
    encryptionKey PRESENT,
    verifyKeyIndicator (WITH COMPONENTS {
      verificationKey (WITH COMPONENTS {
        ecdsaNistP256 (WITH COMPONENTS {
          compressed-y-0,
          compressed-y-1
        })
      })
    })
  })
})


RootCaCertificate ::= ExplicitCertificate (WITH COMPONENTS { ...,
  issuer (WITH COMPONENTS {self}),
  toBeSigned (WITH COMPONENTS { ...,
    id (WITH COMPONENTS {
      name ("v2xrootca.ghsiss.com")
    }),
    cracaId, -- set to 00 00 00
    crlSeries(0),                          
    validityPeriod (WITH COMPONENTS { ...,
      duration (RootCaCertExpiration)
    }),
    region ABSENT,
    assuranceLevel ABSENT,
    appPermissions (SequenceOfPsidSsp (SIZE(1)) (CONSTRAINED BY {
      PsidSsp (WITH COMPONENTS {
        psid (SecurityMgmtPsid)
        --ssp(OER encoding of ScmsSsp indicating RootCassp)
      })
    })),
    certIssuePermissions (SequenceOfPsidGroupPermissions (SIZE(4)) (CONSTRAINED BY {
      PsidGroupPermissions ( WITH COMPONENTS {..., 
	    appPermissions (WITH COMPONENTS { 
          all
        }),
        minChainDepth(3),
        chainDepthRange(-1),
        eeType ({app, enrol})
      }),
      PsidGroupPermissions ( WITH COMPONENTS {..., 
	    appPermissions (WITH COMPONENTS{ 
          explicit (SequenceOfPsidSspRange (SIZE (3)) (CONSTRAINED BY {
            PsidSspRange (WITH COMPONENTS {
              psid (SecurityMgmtPsid), sspRange ABSENT 
            }),             
            PsidSspRange (WITH COMPONENTS {
              psid (MisbehaviorReportingPsid), sspRange ABSENT 
            }), 
            PsidSspRange (WITH COMPONENTS {
              psid (CrlPsid), sspRange ABSENT 
            })
          }))
        }),
        minChainDepth(1),
        chainDepthRange(-1)
      })
    })),
    certRequestPermissions PRESENT,
    canRequestRollover ABSENT,
    encryptionKey PRESENT,
    verifyKeyIndicator (WITH COMPONENTS {
      verificationKey (WITH COMPONENTS {
        ecdsaNistP256 (WITH COMPONENTS {
          compressed-y-0,
          compressed-y-1
        })
      })
    })
  })
})


ElectorCertificate ::= ExplicitCertificate (WITH COMPONENTS { ...,
  issuer (WITH COMPONENTS {self}),
  toBeSigned (WITH COMPONENTS { ...,
    id (WITH COMPONENTS {
      name ("") -- !!TBD!!
    }),
    cracaId, -- set to 00 00 00
    crlSeries(0),                          
    validityPeriod (WITH COMPONENTS { ...,
      duration (ElectorCertExpiration)
    }),
    region ABSENT,
    assuranceLevel ABSENT,
    appPermissions (SequenceOfPsidSsp (SIZE(1)) (CONSTRAINED BY {
      PsidSsp (WITH COMPONENTS {
        psid (SecurityMgmtPsid)
        --ssp(OER encoding of ScmsSsp indicating Electorssp)
      })
    })),
    certIssuePermissions ABSENT,
    certRequestPermissions ABSENT,
    canRequestRollover ABSENT,
    encryptionKey PRESENT,
    verifyKeyIndicator (WITH COMPONENTS {
      verificationKey (WITH COMPONENTS {
        ecdsaNistP256 (WITH COMPONENTS {
          compressed-y-0,
          compressed-y-1
        })
      })
    })
  })
})

END
