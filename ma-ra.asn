-------------------------------------------------------------------------------
-- MA-RA 
--
-- The structures in this file define the protocol for messages between the MA
-- and the RA for the purposes of
-- 
-- a) Blacklisting: the MA sends a request to blacklist an enrollment 
-- certificate so that the RA can add the corresponding certificate to its
-- internal blacklist. This can be done either using the hash of the RA-to-PCA
-- pseudonym certificate request (HPCR) or a revocation identifier (RIF).
-- 
-- b) Revocation: requesting and receiving the linkage chain identifier, i.e., 
-- the encrypted linkage seed to the LA and the LA's contact information, given  
-- the HPCR, for the purpose of revocation.
--
-- Both of these processes are initiated by the MA.
--
-- This file is part of the SCMS protocol developed by CAMP VSC5
-- It depends on the IEEE 1609.2 protocol specification
-------------------------------------------------------------------------------

Ieee1609Dot2MaRaInterface
{iso(1) identified-organization(3) ieee(111) 
standards-association-numbered-series-standards(2) wave-stds(1609) dot2(2)
scms(2) interfaces(1) ma-ra(14)}

DEFINITIONS AUTOMATIC TAGS ::= BEGIN 

EXPORTS ALL;
 
IMPORTS 
  HashedId8,
  HashedId10,
  Hostname,
  Opaque, 
  Uint8,
  Uint32
FROM IEEE1609dot2BaseTypes {iso(1) identified-organization(3) ieee(111) 
    standards-association-numbered-series-standards(2) wave-stds(1609) dot2(2)
    base(1) base-types(2)}

  Countersignature,
  SignerIdentifier
FROM IEEE1609dot2 {iso(1) identified-organization(3) ieee(111) 
    standards-association-numbered-series-standards(2) wave-stds(1609) dot2(2)
    base(1) schema(1)}

  HPCR,
  HPCRAndHostInfo,
  LCIAndHostInfo,
  RaHostnameId,
  MaHostnameId,
  RIF
FROM Ieee1609dot2ScmsBaseTypes {iso(1) identified-organization(3) ieee(111)
    standards-association-numbered-series-standards(2) wave-stds(1609) dot2(2)
    scms(2) interfaces(1) base-types(2)}

  ScopedMaRaBlacklistError,
  ScopedMaRaLCIError
FROM Ieee1609dot2ScmsError {iso(1) identified-organization(3) ieee(111)
    standards-association-numbered-series-standards(2) wave-stds(1609) dot2(2)
    scms(2) errors(2) complete(1)}
;

--------------------------------
-- MaRaInterfacePDU 
--
-- All message types for the MA-RA interface PDU
--------------------------------
MaRaInterfacePDU ::= CHOICE {
    maRaBlacklistRequest   MaRaBlacklistRequestMsg,
    raMaBlacklistResponse  RaMaBlacklistResponseMsg,
    maRaLCIRequest         MaRaLCIRequestMsg,
    raMaLCIResponse        RaMaLCIResponseMsg,
    maRaRseObeIdBlacklistRequest    MaRaRseObeIdBlacklistRequestMsg,
    raMaRseObeIdBlacklistResponse   RaMaRseObeIdBlacklistResponseMsg,
    maRaCDVRequest          MaRaCDVRequestMsg,
    raMaCDVResponse         RaMaCDVResponseMsg,
    ...
}

--------------------------------
-- MaRaBlacklistRequestMsg 
--
-- Request to blacklist sent by the MA to the RA
-- Note that this is actually signed by the MA at the scms-protocol level.
-- The countersignatures are generated by Auditors.
--
-- version            version of this request structure
-- tbs                structure containing the request 
-- signatures         array of signatures proving that the MA is authorized
--                    to perform this instruction; signatures can either be
--                    a) the signature of the MA
--                    b) the signature of the MA and of multiple Auditors
--------------------------------
MaRaBlacklistRequestMsg ::= SEQUENCE {
    version    Uint8(1),
    tbs        ToBeSignedBlacklistingInstructionMsg,
    -- Size 0 is used when no countersignatures are necessary
    signatures SEQUENCE SIZE (0..MAX) OF Countersignature
}

--------------------------------
-- ToBeSignedBlacklistingInstructionMsg 
--
-- Structure containing the request for blacklisting
--
-- maId               hostname of the MA
-- hpcr               array of structures containing the HPCR values to be
--                    blacklisted by the RA
--------------------------------
ToBeSignedBlacklistingInstructionMsg ::= SEQUENCE {
    maId       MaHostnameId,
    hpcr	     SEQUENCE OF HPCR,
    ...
}


--------------------------------
-- RaMaBlacklistResponseMsg 
--
-- Response to the blacklist request sent by the RA to the MA
--
-- version            version of this response structure
-- requestHash        hash of the original request
-- raId               hostname of the RA
-- status             array of structures containing the status of the
--                    blacklisting request 
--------------------------------
RaMaBlacklistResponseMsg ::= SEQUENCE {
    version          Uint8(1),
    requestHash      HashedId8,  -- hash of the original request
    raId             RaHostnameId,
    status           SEQUENCE OF BlacklistingStatus,
    ...
}


--------------------------------
-- BlacklistingStatus 
--
-- Structure containing the status of the blacklisting request for a given HPCR
-- 
-- hpcr               the hash of the RA-to-PCA certificate request (HPCR) 
--                    as appearing in the blacklisting request by the MA
-- reply              structure containing (in case of)
--                    a) success: no additional information
--                    b) failure: the corresponding error
--------------------------------
BlacklistingStatus ::= SEQUENCE {
  	hpcr	  HPCR,
    reply   CHOICE {
      success  NULL,
      failure  ScopedMaRaBlacklistError
    }
}
	
--------------------------------
-- MaRaLCIRequestMsg 
--
-- Request for linkage chain identifiers sent by the MA to the RA
-- Note that this is actually signed by the MA at the scms-protocol level.
-- The countersignatures are generated by Auditors.
--
-- version            version of this request structure
-- tbs                structure containing the request 
-- signatures         array of signatures proving that the MA is authorized
--                    to perform this instruction; signatures can either be
--                    a) the signature of the MA
--                    b) the signature of the MA and of multiple Auditors
--------------------------------
MaRaLCIRequestMsg ::= SEQUENCE {
    version    Uint8(1),
    tbs        ToBeSignedLCIRequestMsg,
    -- Size 0 is used when no countersignatures are necessary
    signatures SEQUENCE SIZE (0..MAX) OF Countersignature
}


--------------------------------
-- ToBeSignedLCIRequestMsg 
--
-- Structure containing the request for linkage chain identifiers
--
-- maId                   hostname of the MA
-- linkageValues          array of HPCR values for which the MA requests
--                        the linkage chain identifiers
--------------------------------
ToBeSignedLCIRequestMsg ::= SEQUENCE {
    maId       MaHostnameId,
    hpcr       SEQUENCE OF HPCR,
    ...
}


--------------------------------
-- RaMaLCIResponseMsg 
--
-- Response to the request for linkage chain identifiers sent by the RA to the
-- MA
--
-- version            version of this response structure
-- requestHash        hash of the original request
-- raId               hostname of the RA
-- lciInfo            array of structures containing the mapping of HPCR values
--                    to linkage chain identifiers in response to the request 
--                    by the MA
--------------------------------
RaMaLCIResponseMsg ::= SEQUENCE {
    version          Uint8(1),
    requestHash      HashedId8,  -- hash of the original request
    raId             RaHostnameId,
    lciInfo          SEQUENCE OF HPCR2LCI,
    ...
}


--------------------------------
-- HPCR2LCI 
--
-- Structure containing the mapping of HPCR values to linkage chain identifiers
--                    
-- hpcr               the HPCR value sent in the original request
-- reply              structure containing (in case of)
--                    a) success 
--                         groupIdentifier the group identifier of the device
--                         info            structure containing the linkage 
--                                         chain identifiers and the hostnames
--                                         of the LAs
--                    b) failure: the corresponding error
--------------------------------
HPCR2LCI ::= SEQUENCE {
  	hpcr		HPCR,
    reply   CHOICE {
      success   SEQUENCE {
        groupIdentifier OCTET STRING (SIZE(4)),
        info            LCIAndHostInfo
      },
      failure   ScopedMaRaLCIError
    }
}


-- The following messages use a Revocation Identifer (RIF) instead of the
-- HPCR to identify what is being revoked.  
--

-- The RIF data type is defined as an 8-byte arry in scms-base-types.asn

--------------------------------
-- MaRaRseObeIdBlacklistRequestMsg 
-- 
-- Request to blacklist sent by the MA to the RA
-- Note that this is actually signed by the MA at the scms-protocol level.
-- The countersignatures are generated by Auditors.
--
-- version            version of this request structure
-- tbs                structure containing the request 
-- signatures         array of signatures proving that the MA is authorized
--                    to perform this instruction; signatures can either be
--                    a) the signature of the MA
--                    b) the signature of the MA and of multiple Auditors
--------------------------------
MaRaRseObeIdBlacklistRequestMsg ::= SEQUENCE {
    version    Uint8(1),
    tbs        ToBeSignedRseObeIdBlacklistingInstructionMsg,
    -- Size 0 is used when no countersignatures are necessary
    signatures SEQUENCE SIZE (0..MAX) OF Countersignature
}


--------------------------------
-- ToBeSignedRseObeIdBlacklistingInstructionMsg 
--
-- Structure containing the request for blacklisting using RIF data
--
-- maId               hostname of the MA
-- rif                array of RIF values to be blacklisted by the RA
--------------------------------
ToBeSignedRseObeIdBlacklistingInstructionMsg ::= SEQUENCE {
    maId        MaHostnameId,
    rif	        SEQUENCE OF RIF,
    ...
}


--------------------------------
-- RaMaRseObeIdBlacklistResponseMsg 
--
-- Response to the blacklist request sent by the RA to the MA
--
-- version            version of this response structure
-- requestHash        hash of the original request
-- raId               hostname of the RA
-- status             array of structures containing the status of the
--                    blacklisting request 
--------------------------------
RaMaRseObeIdBlacklistResponseMsg ::= SEQUENCE {
    version          Uint8(1),
    requestHash      HashedId8,  -- hash of the original request
    raId             RaHostnameId,
    status           SEQUENCE OF RseObeIdBlacklistingStatus,
    ...
}


--------------------------------
-- RseObeIdBlacklistingStatus 
--
-- Structure containing the status of the blacklisting request for a given RIF
-- 
-- rif                the revocation identifier as appearing in the blacklisting
--                    request by the MA
-- reply              structure containing (in case of)
--                    a) success: no additional information
--                    b) failure: the corresponding error
--------------------------------
RseObeIdBlacklistingStatus ::= SEQUENCE {
    rif     RIF,
    reply   CHOICE {
      success  NULL,
      failure  ScopedMaRaBlacklistError
    }
}



--------------------------------
-- MaRaCDVRequestMsg 
--
-- Request for certificate digest values (CDV) sent by the MA to the RA
-- Note that this is actually signed by the MA at the scms-protocol level.
-- The countersignatures are generated by Auditors.
--
-- version            version of this request structure
-- tbs                structure containing the request 
-- signatures         array of signatures proving that the MA is authorized
--                    to perform this instruction; signatures can either be
--                    a) the signature of the MA
--                    b) the signature of the MA and of multiple Auditors
--------------------------------
MaRaCDVRequestMsg ::= SEQUENCE {
    version    Uint8(1),
    tbs        ToBeSignedCDVRequestMsg,
    -- Size 0 is used when no countersignatures are necessary
    signatures SEQUENCE SIZE (0..MAX) OF Countersignature
}


--------------------------------
-- ToBeSignedCDVRequestMsg 
--
-- Structure containing the request for certificate digest values (CDV)
--
-- maId                   hostname of the MA
-- rifValues              array of RIF values for which the MA requests
--                        the corresponding CDV values
--------------------------------
ToBeSignedCDVRequestMsg ::= SEQUENCE {
    maId       MaHostnameId,
    rifValues  SEQUENCE OF RIF,
    ...
}



--------------------------------
-- RaMaCDVResponseMsg 
--
-- Response to the request for CDV with list of certificate digest values (CDV)
-- sent by the RA to the MA
--
-- version            version of this response structure
-- requestHash        hash of the original request
-- raId               hostname of the RA
-- cdvInfo            array of structures containing the mapping of RIF values
--                    to CDV in response to the request by the MA
--------------------------------
RaMaCDVResponseMsg ::= SEQUENCE {
    version         Uint8(1),
    requestHash     HashedId8,  -- hash of the original request
    raId            RaHostnameId,
    cdvInfo         SEQUENCE OF CdvInfo
}


--------------------------------
-- CdvInfo 
--
-- Structure containing the mapping of Revocation Identifier (RIF) value to
-- Certificate Digest Value (CDV)
--
-- rif                the RIF value sent in the original request
-- reply              structure containing (in case of)
--                    a) success: an array of CDVs
--                    b) failure: the corresponding error
--------------------------------
CdvInfo ::= SEQUENCE {  
	rif        RIF,
	reply CHOICE {			
        -- for each input rif, a list of certificate digests (HashedId8) is returned
        success  SEQUENCE OF HashedId10,
        failure  ScopedMaRaBlacklistError
	}
}


END

