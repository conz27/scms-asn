-------------------------------------------------------------------------------
-- COMPONENT-CERT-MANAGEMENT 
--
-- The structures in this file define the protocol for messages for the
-- management of certificates of SCMS components, namely root CAs and 
-- Electors.
--
-- This file is part of the SCMS protocol developed by CAMP VSC5
-- It depends on the IEEE 1609.2 protocol specification
-------------------------------------------------------------------------------

Ieee1609Dot2ScmsComponentCertificateManagement
{iso(1) identified-organization(3) ieee(111) 
standards-association-numbered-series-standards(2) wave-stds(1609)  
dot2(2) scms(2) interfaces(1) component-certificate-management (3)}

DEFINITIONS AUTOMATIC TAGS ::= BEGIN

EXPORTS ALL;

IMPORTS 
  Uint8
FROM IEEE1609dot2BaseTypes {iso(1) identified-organization(3) ieee(111) 
  standards-association-numbered-series-standards(2) wave-stds(1609)  
  dot2(2) base(1) base-types(2)}

  ScopedComponentCertificateManagementError
FROM Ieee1609dot2ScmsError {iso(1) identified-organization(3) ieee(111)
  standards-association-numbered-series-standards(2) wave-stds(1609)  dot2(2)
  scms (2) errors(2) complete (1)}

  ExplicitCertificate
FROM IEEE1609dot2 {iso(1) identified-organization(3) ieee(111) 
  standards-association-numbered-series-standards(2) wave-stds(1609)  
  dot2(2) base(1) schema(1)}

  Time64
FROM IEEE1609dot2 {iso(1) identified-organization(3) ieee(111)
   standards-association-numbered-series-standards(2) wave-stds(1609)
   dot2(2) base(1) base-types(2)}

  SecuredCrl
FROM IEEE1609dot2Crl {iso(1) identified-organization(3) ieee(111) 
   standards-association-numbered-series-standards(2) wave-stds(1609) dot2(2)
   crl(3) protocol(2)}

  SignedElectorEndorsement
FROM IEEE1609dot2ScmsProtocol {iso(1) identified-organization(3) ieee(111)
  standards-association-numbered-series-standards(2) wave-stds(1609)
  dot2(2) scms(2) interfaces(1) protocol(1)}

;

--------------------------------
-- ScmsComponentCertificateManagementPDU
--
-- All message types for the interface PDU
--------------------------------
ScmsComponentCertificateManagementPDU::= CHOICE {
    tbsElectorEndorsement TbsElectorEndorsement,
    ...
}

--------------------------------
-- TbsElectorEndorsement 
-- 
-- Elector Ballots
--
-- These commands are used to add or remove roots and electors from the SCMS.
-- An "endorsement" is a structure with a command type (add/remove for root
-- or elector) along with the certificate to be added or removed.
-- A signed endorsement is a copy of that whole structure with a signature.
-- To be valid, a ballot must contain signatures from a quorum of electors.
--
-- type               the action to be taken, as defined in the structure below
-- certificate        the object of the endorsement, i.e., the certificate to 
--                    be added/removed
-- effectiveTime      the time when this message will be effective
--------------------------------
TbsElectorEndorsement ::= SEQUENCE {
    type EndorsementType,		
    certificate ExplicitCertificate, 
    effectiveTime Time64 OPTIONAL
}

--------------------------------
-- EndorsementType
--
-- The action endorsed by the ballot, can be either of the following
--
-- addRoot            add a root CA
-- addElector         add an elector
-- removeRoot         remove a root CA
-- removeElector      remove an elector
--------------------------------
EndorsementType ::= ENUMERATED {
    addRoot (0),	
    addElector (1),
    removeRoot (2),
    removeElector (3),
    ...
}

--------------------------------
-- ElectorBallot 
--
-- A "ballot" is a list of signed endorsements. The signatures are generated by 
-- the Electors (i.e. endorsement ballots) and each signature shall contain a 
-- copy of the same TbsElectorEndorsement.
--
-- endorsements       array of signed elector endorsements
--------------------------------
ElectorBallot ::= SEQUENCE {
    -- ballot TbsBallot,
    endorsements SEQUENCE SIZE(1..MAX) OF SignedElectorEndorsement,
    ...
}



--------------------------------
-- Composite CRL
-- 
-- A composite CRL contains a list of 1609.2 CRLs, one per CRL series
-- It may also contain ballots to remove Root CAs and Electors 
--
-- securedCrlSeries   array of CRLs
-- revokedRootCAs     array of ballots specifying revoked root CAs
-- revokedElectors    array of ballots specifying revoked electors
--------------------------------
CompositeCrl ::= SEQUENCE {
    securedCrlSeries SEQUENCE SIZE(0..MAX) OF SecuredCrl,
    revokedRootCAs SEQUENCE SIZE(0..MAX) OF ElectorBallot,
    revokedElectors SEQUENCE SIZE(0..MAX) OF ElectorBallot,
    ...
}

END
