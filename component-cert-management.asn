
Ieee1609Dot2ScmsComponentCertificateManagement
{iso(1) identified-organization(3) ieee(111) 
standards-association-numbered-series-standards(2) wave-stds(1609)  
dot2(2) scms(2) interfaces(1) component-certificate-management (3)}

DEFINITIONS AUTOMATIC TAGS ::= BEGIN

EXPORTS ALL;

IMPORTS 
  Uint8
FROM IEEE1609dot2BaseTypes {iso(1) identified-organization(3) ieee(111) 
		standards-association-numbered-series-standards(2) wave-stds(1609)  
		dot2(2) base(1) base-types(2)}

ScopedComponentCertificateManagementError
FROM Ieee1609dot2ScmsError {iso(1) identified-organization(3) ieee(111)
  standards-association-numbered-series-standards(2) wave-stds(1609)  dot2(2)
  scms (2) errors(2) complete (1)}

  ExplicitCertificate,
  SignedData
FROM IEEE1609dot2 {iso(1) identified-organization(3) ieee(111) 
   standards-association-numbered-series-standards(2) wave-stds(1609)  
   dot2(2) base(1) schema(1)}

   ElectorCertificate,
  RootCaCertificate
FROM IEEE1609dot2-profiles {iso(1) identified-organization(3) ieee(111) 
    standards-association-numbered-series-standards(2) wave-stds(1609)  
    dot2(2) base (1) profiles (3)}

  Time64
FROM IEEE1609dot2 {iso(1) identified-organization(3) ieee(111)
    standards-association-numbered-series-standards(2) wave-stds(1609)
    dot2(2) base(1) base-types(2)}

  SecuredCrl
FROM IEEE1609dot2Crl {iso(1) identified-organization(3) ieee(111) 
    standards-association-numbered-series-standards(2) wave-stds(1609) dot2(2)
    crl(3) protocol(2)}

;

ScmsComponentCertificateManagementPDU::= CHOICE {
    placeholder Uint8(1),
    ...
}

----
-- Elector Ballots
--
-- These commands are used to add or remove roots and electors from the SCMS.
-- Each command must be signed by a quorum of valid electors.
----

TbsBallot ::= SEQUENCE {
    type BallotType,			-- defines the action to be taken
    certificate ExplicitCertificate, 	-- certificate to be added/removed
    effectiveTime Time64 OPTIONAL	-- effective time for this message
}

BallotType ::= ENUMERATED {
    addRoot (0),	-- add a root CA
    addElector (1),	-- add an elector
    removeRoot (2),	-- remove a root CA
    removeElector (3),  -- remove an elector
    ...
}

ElectorBallot ::= SEQUENCE {
    ballot TbsBallot,
    -- the signatures are generated by the Electors (i.e. endorsement ballots)
    ensorsements SEQUENCE SIZE(1..MAX) OF SignedData,
    ...
}


----
-- Composite CRL
-- 
-- A composit CRL contains a list of 1609.2 CRLs, one per CRL series
-- It may also contain ballots to remove Root CAs and Electors 
----

CompositeCrl ::= SEQUENCE {
    securedCrlSeries SEQUENCE SIZE(0..MAX) OF SecuredCrl,
    revokedRootCAs SEQUENCE SIZE(0..MAX) OF ElectorBallot,
    revokedElectors SEQUENCE SIZE(0..MAX) OF ElectorBallot,
    ...
}

END
