
Ieee1609Dot2EcaEndEntityInterface
{iso(1) identified-organization(3) ieee(111)
standards-association-numbered-series-standards(2) wave-stds(1609)
dot2(2) scms(2) interfaces(1) eca-ee (5)}

DEFINITIONS AUTOMATIC TAGS ::= BEGIN

EXPORTS ALL;

IMPORTS

  CrlSeries,
  EccP256CurvePoint,
  GeographicRegion,
  HashedId3,
  HashedId8,
  Hostname,
  PublicEncryptionKey,
  PublicVerificationKey,
  SubjectAssurance,
  Time32,
  Uint8,
  Uint16

FROM IEEE1609dot2BaseTypes {iso(1) identified-organization(3) ieee(111)
	 standards-association-numbered-series-standards(2) wave-stds(1609)
	 dot2(2) base(1) base-types(2)}

  Certificate,
  CertificateId,
  Ieee1609Dot2Data,
  ImplicitCertificate,
  SequenceOfPsidGroupPermissions,
  SequenceOfPsidSsp,
  ValidityPeriod,
  VerificationKeyIndicator

FROM IEEE1609dot2 {iso(1) identified-organization(3) ieee(111)
	 standards-association-numbered-series-standards(2) wave-stds(1609)
	 dot2(2) base (1) schema (1)}

  SecurityMgmtPsid

FROM Ieee1609dot2ScmsBaseTypes {iso(1) identified-organization(3) ieee(111)
     standards-association-numbered-series-standards(2) wave-stds(1609)  dot2(2)
     scms (2) interfaces(1) base-types (2)}

;

EcaEndEntityInterfacePDU::= CHOICE {
    obeEcaCertRequest     ObeEcaEnrollmentCertificateRequest,
    ecaObeCertResponse    EcaObeEnrollmentCertificateResponse,
    rseEcaCertRequest     RseEcaEnrollmentCertificateRequest,
    ecaRseCertResponse    EcaRseEnrollmentCertificateResponse,
    ...
}

--------------------------------------------------------------------------------------
--
-- Enrollment Sequence Diagram (OBE/RSE)
--
--              OBE                                                     ECA
--               |                                                       |
--   ================================                                    |
--   | Generate Enrollment Key Pair |                                    |
--   ================================                                    |
--               |                                                       |
--   ===============================                                     |
--   |Include Public Key in Request|                                     |
--   ===============================                                     |
--               |                                                       |
--               |============ObeEnrollmentCertificateRequest===========>|
--               |             (TBS Data + PublicKey)                    |
--               |                                              ====================
--               |                                              |Create Enrollment |
--               |                                              |   Certificate    |
--               |                                              |        +         |
--               |                                              |  Reconstruction  |
--               |                                              |      Values      |
--               |                                              ====================
--               |                                                       |
--               |<==========ObeEnrollmentCertificateResponse============|
--               |    (Enrollment Cert + Pub/Priv Reconstruction Data)   |
--               |                                                       |
--     ======================                                            |
--     |     Reconstruct    |                                            |
--     |     Private Key    |                                            |
--     ======================                                            |
--               |                                                       |
--     =======================                                           |
--     | Enrollment Complete |                                           |
--     =======================                                           |
--               |                                                       |
--               |                                                       |
--
-- Refer to ee-ra.asn for description of enrollment procedure.
--
--------------------------------------------------------------------------------------


-------------------------------------------------------------------------------
-- Requests / Responses
-------------------------------------------------------------------------------

-- If the DCM needs to sign the enrollment request, it would use
-- SignedObeEnrollmentRequest or SignedRseEnrollmentRequest. For encryption purposes,
-- the DCM would use SecureObeEnrollmentRequest or SecureRseEnrollmentRequest.
-- The operations for responses are analagous to those for requests.

ObeEcaEnrollmentCertificateRequest ::= CommonEnrollmentCertificateRequest
EcaObeEnrollmentCertificateResponse ::= CommonEnrollmentCertificateResponse

RseEcaEnrollmentCertificateRequest ::= CommonEnrollmentCertificateRequest
EcaRseEnrollmentCertificateResponse ::= CommonEnrollmentCertificateResponse

CommonEnrollmentCertificateRequest ::= SEQUENCE {
    version             Uint8(1),
    currentTime         Time32,
    requestedStartTime  Time32, -- certificate start time
    tbsData             ToBeSignedEnrollmentCertificate,
    verifyKey           PublicVerificationKey,
    ...
}

CommonEnrollmentCertificateResponse ::= SEQUENCE {
	version         Uint8(1),
    requestHash     HashedId8,  -- hash of the original request
    ecaCert         Certificate,
    raCert          Certificate,
    raHostname      Hostname,
    enrollmentCert  Certificate (WITH COMPONENTS { ...,
        type(implicit),
        issuer(WITH COMPONENTS {sha256AndDigest})
    }),
    privKeyReconstructionS EccP256PrivateKeyReconstruction,
    ...
}

ToBeSignedEnrollmentCertificate ::= SEQUENCE  {
    id                     CertificateId (
        WITH COMPONENTS {..., name PRESENT } |
        WITH COMPONENTS {..., binaryId PRESENT } |
        WITH COMPONENTS {..., none PRESENT }
    ),
    validityPeriod         ValidityPeriod,
    region                 GeographicRegion OPTIONAL,
    assuranceLevel         SubjectAssurance OPTIONAL,
    canRequestRollover     NULL OPTIONAL,
    encryptionKey          PublicEncryptionKey OPTIONAL,
    ...
}

EccP256PrivateKeyReconstruction ::= OCTET STRING(SIZE(32))

END
