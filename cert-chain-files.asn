IEEE1609dot2-cert-chains {iso(1) identified-organization(3) ieee(111)
standards-association-numbered-series-standards(2) wave-stds(1609)
dot2(2) base (1) cert-chains (4)}

DEFINITIONS AUTOMATIC TAGS ::= BEGIN

EXPORTS ALL;

IMPORTS

  Hostname,
  Time64,
  Uint16
FROM IEEE1609dot2 {iso(1) identified-organization(3) ieee(111)
    standards-association-numbered-series-standards(2) wave-stds(1609)
    dot2(2) base(1) base-types(2)}

  SignedData,
  Certificate,
  ImplicitCertificate,
  ExplicitCertificate
FROM IEEE1609dot2 {iso(1) identified-organization(3) ieee(111)
    standards-association-numbered-series-standards(2) wave-stds(1609)
    dot2(2) base(1) schema(1)}

  ElectorBallot
FROM Ieee1609Dot2ScmsComponentCertificateManagement
{iso(1) identified-organization(3) ieee(111) 
standards-association-numbered-series-standards(2) wave-stds(1609)  
dot2(2) scms(2) interfaces(1) component-certificate-management (3)}

;

CertificateChainFiles ::= CHOICE {
    globalCertificateChainFile GlobalCertificateChainFile,
    localCertificateChainFile LocalCertificateChainFile,
    ...
}

----
--
-- Global Certificate Chain File:
--
-- Contains the full certificates of all SCMS components.
-- This file is signed by the Policy Generator.
--
----

GlobalCertificateChainFile ::= SEQUENCE {
    version Uint16,		-- unique version number for this GCCF
    certStore CertificateStore,	-- list of certificats and all issuers
    ...
}

----
--
-- Local Certificate Chain File:
--
-- Contains a minimum set of full certificates as required by policy and
-- the selection of the local RA that generated this file.  
-- This file is signed by the Policy Generator.
--
----

LocalCertificateChainFile ::= SEQUENCE {
    version CompositeVersion,		-- composite version for this file
    requiredCertStore CertificateStore, -- required list of certificates
    optionalCertList SEQUENCE SIZE(0..MAX) OF Certificate, -- optional certs
    ...
}

CompositeVersion ::= SEQUENCE {
	gccfVersion Uint16, 		-- GCCF version that was used to generate this file
	lccfVersion Uint16,	       	-- unique local version for this LCCF
	raHostname Hostname		-- name of the RA that generated this LCCF
}


--
-- Certificate Store
--
-- A certificate store is a list of root and elector endorsements plus lists
-- of ICA and PCA certificates needed by EEs to validate messages.  This base
-- type is used to construct the GCCF and the LCCF.
-- The PG creates the GCCF by assembling all certificates needed to validate
-- all EE certificates in the SCMS.
-- An RA creates the LCCF by pruning the GCCF down to the lists needed by
-- the EEs that are assigned to that RA.  
-- Note that these are lists of certificates, not certificate chains as
-- defined in 1609.2.  The primary reason for not using a list of certificate
-- chains it to eliminate redundancy.  If we used a list of certifiate
-- chains, each chain would have a copy of the same root CA and some chains
-- would have copies of the same ICA.
--

CertificateStore ::= SEQUENCE {
    rootCAEndorsements SEQUENCE SIZE(1..MAX) OF ElectorBallot,
    electorEndorsements SEQUENCE SIZE(0..MAX) OF ElectorBallot,
    maCertificate Certificate,
    certs SEQUENCE SIZE(0..MAX) OF Certificate,
    ...
}


END
