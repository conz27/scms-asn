-------------------------------------------------------------------------------
-- MA-PCA 
--
-- The structures in this file define the protocol for messages between the MA
-- and the PCA for the purposes of
--
-- a) Misbehaviour detection: the MA requests and receives information about
-- the mapping of the linkage values of the misbehaving EE to the pre-linkage 
-- value.
-- 
-- b) Revocation: the MA requests and receives the hash of the RA-to-PCA 
-- certificate request (i.e., HPCR) for the purpose of revocation. This 
-- hash will subsequently be sent to the RA so that it can add the 
-- enrollment corresponding certificate to its internal blacklist.
--
-- Both of these processes are initiated by the MA.
--
-- This file is part of the SCMS protocol developed by CAMP VSC5
-- It depends on the IEEE 1609.2 protocol specification
-------------------------------------------------------------------------------

Ieee1609Dot2MaPcaInterface
{iso(1) identified-organization(3) ieee(111) 
standards-association-numbered-series-standards(2) wave-stds(1609) dot2(2) 
scms(2) interfaces (1) ma-pca(13)}


DEFINITIONS AUTOMATIC TAGS ::= BEGIN 

EXPORTS ALL;
 
IMPORTS 
  GroupLinkageValue,
  HashedId8,
  LinkageValue,
  Uint8
FROM IEEE1609dot2BaseTypes {iso(1) identified-organization(3) ieee(111) 
    standards-association-numbered-series-standards(2) wave-stds(1609) dot2(2)
    base(1) base-types(2)}

  Countersignature
FROM IEEE1609dot2 {iso(1) identified-organization(3) ieee(111) 
    standards-association-numbered-series-standards(2) wave-stds(1609) dot2(2) 
    base(1) schema(1)}

  HPCRAndHostInfo,
  MaHostnameId,
  PcaHostnameId,
  EncryptedPlvAndHostInfo
FROM Ieee1609dot2ScmsBaseTypes {iso(1) identified-organization(3) ieee(111)
    standards-association-numbered-series-standards(2) wave-stds(1609) dot2(2)
    scms(2) interfaces(1) base-types(2)}

  ScopedMaPcaError
FROM Ieee1609dot2ScmsError {iso(1) identified-organization(3) ieee(111)
    standards-association-numbered-series-standards(2) wave-stds(1609) dot2(2)
    scms(2) errors(2) complete(1)}
;


--------------------------------
-- MaPcaInterfacePDU 
--
-- All message types for the MA-PCA interface PDU
--------------------------------
MaPcaInterfacePDU ::= CHOICE {
    maPcaPreLinkageValueRequest   MaPcaPreLinkageValueRequestMsg,
    pcaMaPreLinkageValueResponse  PcaMaPreLinkageValueResponseMsg,
    maPcaHPCRRequest              MaPcaHPCRRequestMsg,
    pcaMaHPCRResponse             PcaMaHPCRResponseMsg,
    ...
}


--------------------------------
-- MaPcaPreLinkageValueRequestMsg 
--
-- Request for pre-linkage value sent by MA to PCA for the purpose of 
-- misbehavior detection.
-- Note that this is actually signed by the MA at the scms-protocol level.
-- The countersignatures are generated by Auditors.
--
-- version            version of this response structure
-- tbs                structure containing the request 
-- signatures         array of signatures proving that the MA is authorized
--                    to perform this instruction; signatures can either be
--                    a) the signature of the MA
--                    b) the signature of the MA and of multiple Auditors
--------------------------------
MaPcaPreLinkageValueRequestMsg ::= SEQUENCE {
    version         Uint8(1),
    tbs             ToBeSignedMaPcaPreLinkageValueRequestMsg,
    -- Size 0 is used when no countersignatures are necessary
    signatures      SEQUENCE (SIZE (0..MAX)) OF Countersignature
}

--------------------------------
-- ToBeSignedMaPcaPreLinkageValueRequestMsg 
--
-- Structure containing the request for pre-linkage value 
--
-- maId                   hostname of the MA
-- linkageValues          array of linkage values for which the MA requests
--                        the pre-linkage values
-- groupLinkageValues     array of group linkage values for which the MA 
--                        requests the pre-linkage values
--------------------------------
ToBeSignedMaPcaPreLinkageValueRequestMsg ::= SEQUENCE {
    maId                MaHostnameId,
    linkageValues       SEQUENCE (SIZE (0..MAX)) OF LinkageValue,
    groupLinkageValues  SEQUENCE (SIZE (0..MAX)) OF GroupLinkageValue,
    ...
}

--------------------------------
-- PcaMaPreLinkageValueResponseMsg 
--
-- Response from the PCA to the MA containing the pre-linkage values 
-- corresponding to the linkage values sent in the request
--
-- version            version of this response structure
-- requestHash        hash of the original request
-- pcaId              hostname of the PCA
-- plvInfo            array of structures containing the pre-linkage values in
--                    response to the request by the MA
--------------------------------
PcaMaPreLinkageValueResponseMsg ::= SEQUENCE {
    version         Uint8(1),
    requestHash     HashedId8,  -- hash of the original request
    pcaId           PcaHostnameId,
    plvInfo         SEQUENCE OF Lv2Plv
}

--------------------------------
-- Lv2Plv 
--
-- Structure containing the pre-linkage values corresponding to the linkage
-- value sent in the request by the MA in case of success or 
-- an error code in case of failure
--
-- lv                 the linkage value from the original request
-- reply              structure containing (in case of)
--                    a) success: the encrypted pre-linkage values corresponding 
--                                to the linkage value requested and the LA's
--                                hostname
--                    b) failure: the corresponding error
--------------------------------
Lv2Plv ::= SEQUENCE {  
	lv    LinkageValue,
	reply CHOICE {
			success  EncryptedPlvAndHostInfo,
			failure  ScopedMaPcaError
	}
}


--------------------------------
-- MaPcaHPCRRequestMsg 
--
-- Request sent by the MA to the PCA for the hash of the RA-to-PCA certificate 
-- request, i.e., 
--         hash(pseudonym_certificate_request_by_RA), or HPCR, 
-- for the purpose of revocation. This hash will subsequently be sent to the RA
-- so that it can add the corresponding certificate to its internal blacklist.
-- 
-- Note that this is actually signed by the MA at the scms-protocol level.
-- The countersignatures are generated by Auditors.
--
-- version            version of this response structure
-- tbs                structure containing the request 
-- signatures         array of signatures proving that the MA is authorized
--                    to perform this instruction; signatures can either be
--                    a) the signature of the MA
--                    b) the signature of the MA and of multiple Auditors
--------------------------------
MaPcaHPCRRequestMsg ::= SEQUENCE {
    version         Uint8(1),
    tbs             ToBeSignedMaPcaHPCRRequestMsg,
    -- Size 0 is used when no countersignatures are necessary
    signatures      SEQUENCE (SIZE (0..MAX)) OF Countersignature
}

--------------------------------
-- ToBeSignedMaPcaHPCRRequestMsg 
--
-- Structure containing the request for HPCR 
--
-- maId                   hostname of the MA
-- linkageValues          array of linkage values for which the MA requests
--                        the HPCR
--------------------------------
ToBeSignedMaPcaHPCRRequestMsg ::= SEQUENCE {
    maId            MaHostnameId,
    linkage-values  SEQUENCE OF LinkageValue,
    ...
--- FIX LATER
}


--------------------------------
-- PcaMaHPCRResponseMsg 
--
-- The response of the PCA to the MA containing the hash of the pseudonym
-- certificate request, also know as HPCR 
--
-- version            version of this response structure
-- requestHash        hash of the original request
-- pcaId              hostname of the PCA
-- hpcrinfo           array of structures containing the HPCR values in
--                    response to the request by the MA
--------------------------------
PcaMaHPCRResponseMsg ::= SEQUENCE {
    version         Uint8(1),
    requestHash     HashedId8,  -- hash of the original request
    pcaId           PcaHostnameId,
    hpcrinfo        SEQUENCE OF Lv2HPCR -- should probably rename to hpcrInfo
}

--------------------------------
-- Lv2HPCR 
--
-- Structure containing the mapping of the HPCR value to the linkage
-- value sent in the request by the MA in case of success or 
-- an error code in case of failure
--
-- lv                 the linkage value from the original request
-- reply              structure containing (in case of)
--                    a) success: the hash of the RA's certificate request to 
--                                the PCA and the RA's hostname
--                    b) failure: the corresponding error
--------------------------------
Lv2HPCR ::= SEQUENCE {  
	lv        LinkageValue,
	reply CHOICE {			
      success  HPCRAndHostInfo,
      failure  ScopedMaPcaError
	}
}


END

