Ieee1609dot2ScmsPolicyTypes {iso(1) identified-organization(3) ieee(111)
standards-association-numbered-series-standards(2) wave-stds(1609)  dot2(2)
scms (2) interfaces(1) policy-types (500)}

DEFINITIONS AUTOMATIC TAGS ::= BEGIN

EXPORTS ALL;

IMPORTS

    Countersignature,
    ExplicitCertificate,
    Ieee1609Dot2Data,
    SequenceOfCertificate

FROM IEEE1609dot2 {iso(1) identified-organization(3) ieee(111)
standards-association-numbered-series-standards(2) wave-stds(1609)
dot2(2) base (1) schema (1)}

    Duration,
    Hostname,
    Opaque,
    Time64,
    Uint8,
    Uint16,
    Uint32,
    Uint64

FROM IEEE1609dot2BaseTypes {iso(1) identified-organization(3) ieee(111)
standards-association-numbered-series-standards(2) wave-stds(1609)
dot2(2) base(1) base-types(2)}

    LaHostnameId,
    PcaHostnameId,
    RaHostnameId

FROM Ieee1609dot2ScmsBaseTypes {iso(1) identified-organization(3) ieee(111)
standards-association-numbered-series-standards(2) wave-stds(1609)  dot2(2)
scms (2) interfaces(1) base-types (2)}

;

----
--
-- Global & Local Policy:
--
-- Each resides in its own file and its signed by one or more components
-- to ensure the policy is valid.
--
----

PolicyFiles ::= CHOICE {
    globalPolicyFile GlobalPolicyFile,
    localPolicyFile LocalPolicyFile,
    ...
}

BasePolicyFile ::= SEQUENCE {
    version Uint8(1),
    tbsData ToBeSignedPolicyData,
    -- countersignatures generated by auditors of the policy file
    signatures SEQUENCE SIZE(1..MAX) OF Countersignature,
    ...
}

ToBeSignedPolicyData ::= SEQUENCE {
    policyID OCTET STRING (SIZE (0..32)),
    generationTime Time64,
    activeTime Time64,
    policy Policy,
    ...
}

GlobalPolicyFile ::= BasePolicyFile (WITH COMPONENTS {...,
    tbsData( WITH COMPONENTS {...,
        policy(WITH COMPONENTS {...,
            global PRESENT
        })
    })
})

LocalPolicyFile ::= BasePolicyFile (WITH COMPONENTS {...,
    tbsData( WITH COMPONENTS {...,
        policy( WITH COMPONENTS {...,
            local PRESENT
        })
    })
})

Policy ::= CHOICE {
    global  GlobalPolicyData,
    local   LocalPolicyData,
    ...
}

GlobalPolicyData ::= SEQUENCE {
    scmsVersion Uint8 DEFAULT 1,                                -- SCMS Version 1 is current
    sizeLaOneId Uint16 OPTIONAL,                                -- LA 1 Identifier (2 bytes)
    sizeLaTwoId Uint16 OPTIONAL,                                -- LA 2 Identifier (2 bytes)
    overdueCrlTolerance Duration OPTIONAL,                      -- Overdue CRL Tolerance (4 bytes)
    iPeriod Duration OPTIONAL,                                  -- i-value / i-period ; default: 1 week
    minCertsPerIPeriod Uint8 DEFAULT 20,                        -- minimum certs per i-period; default: 20 certs
    certValidityModel ValidityModel OPTIONAL,                   -- certificate validity model (concurrent or non-concurent)
    maxDurationPerSuperBatch Duration OPTIONAL,                 -- maximum cert validity time period ; default: 3 years
    bytesLinkageSeed Uint8 DEFAULT 16,                          -- bytes in linkage seed; default 16 max: 32
    bytesLinkageValue Uint8 DEFAULT 9,                          -- bytes in linkage value; default: 9 max: 32
    bytesGroupLinkageSeed Uint8 DEFAULT 16,                     -- bytes in group linkage value; default: 16 max: 32
    bytesGroupLinkageValue Uint8 DEFAULT 9,                     -- bytes in group linkage value; default: 9 max: 32
    maxGroupSize Uint32 OPTIONAL,                               -- maximum number of EEs per group; range: 0 to 2^32-1
    maxNumGroups Uint32 OPTIONAL,                               -- maximum number of groups supported; range: 0 to 2^32-1
    maxCertRequestAge Duration OPTIONAL,                        -- maximum time for Individual Cert Request to remain in aggregator; default: 2 days
    shuffleThreshold Uint32 OPTIONAL,                           -- minimum number of Individual Cert Request before shuffle/send to PCA
    hashOfRequestSize Uint8 DEFAULT 32,                         -- bytes in "hash of request" between PCA & RA for individual cert requests; default: 32
    certChainFileId Uint16 OPTIONAL,                            -- must match version in GlobalCertificateChainFile
    trustManagementCommands TrustManagementCommands OPTIONAL,   -- Trust Management Commands (AddRootCA,RevokeRootCA,AddElector,RevokeElector)
    ...
}

LocalPolicyData ::= SEQUENCE {
    shuffleThreshold Uint64 OPTIONAL,                           -- minimum number of Individual Cert Request before shuffle/send to PCA
    certsPerIPeriod Uint8 DEFAULT 20,                           -- certs per i-period; default: 20 certs
    laOneHost LaHostnameId OPTIONAL,
    laTwoHost LaHostnameId OPTIONAL,
    pcaHost PcaHostnameId OPTIONAL,
    raX509TlsCert Opaque OPTIONAL,
    laX509TlsCert Opaque OPTIONAL,
    pcaX509TlsCert Opaque OPTIONAL,
    sharedKeyUpdateInterval Duration OPTIONAL,                  -- maximum time between changes to pre-linkage value enc/dec key
    ...
}

ValidityModel ::= ENUMERATED {
    concurrent      (1),
    non-concurrent  (2),
    ...
}

----
-- Trust Management Commands
----

TrustManagementCommands ::= SEQUENCE OF TrustManagementCommand

CommandAddRootCA ::= TrustManagementCommand (WITH COMPONENTS {...,
    command(addRootCA)
})

CommandRevokeRootCA ::= TrustManagementCommand (WITH COMPONENTS {...,
    command(revokeRootCA)
})

CommandAddElector ::= TrustManagementCommand (WITH COMPONENTS {...,
    command(addElector)
})

CommandRevokeElector ::= TrustManagementCommand (WITH COMPONENTS {...,
    command(revokeElector)
})

TrustManagementCommand ::= SEQUENCE {
    command TrustManagementCommandType,
    certificate ExplicitCertificate,
    generationTime Time64,
    expirationTime Time64,
    -- the signatures are generated by the Electors (i.e. endorsement ballots)
    signatures SEQUENCE SIZE(1..MAX) OF Countersignature,
    ...
}

TrustManagementCommandType ::= ENUMERATED {
    addRootCA       (1),
    revokeRootCA    (2),
    addElector      (3),
    revokeElector   (4),
    ...
}

END
